{
	"info": {
		"_postman_id": "0fa0e9a0-b72c-47e0-b5ea-2a95692c99d5",
		"name": "Chat Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30509617",
		"_collection_link": "https://universal-satellite-367754.postman.co/workspace/New-Team-Workspace~4eb40357-909c-46cb-8125-79667e3f8ce9/collection/30509617-0fa0e9a0-b72c-47e0-b5ea-2a95692c99d5?action=share&source=collection_link&creator=30509617"
	},
	"item": [
		{
			"name": "signup",
			"item": [
				{
					"name": "[⎷]  Add a user with \"username\" field less than 2 characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.username).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"username is in a valid format\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.email).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);",
									"});",
									"",
									"",
									"pm.test(\"Response schema matches the expected schema for signup endpoint\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.have.property('username').that.is.a('string');;",
									"    pm.expect(responseData).to.have.property('createdAt').that.is.a('string');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"l\",\n    \"password\": \"longpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷]  Add a user with \"username\" field greater than 30 characters",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"fieurjfeirjeiudnienucienienrciunsernsceurbncrkuhberiuwnerunweirufbnewr\",\n    \"password\": \"longpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Add a message without the required \"username\" field",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"\",\n    \"password\":\"longpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Add a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 201\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Response body has json with form data\", () => {",
									"    const user = utils.getData(pm.response.json());",
									"",
									"    pm.expect(user.username).to.eql(pm.collectionVariables.get(\"user_username\"));",
									"});",
									"",
									"pm.test(\"Response body doesn't have a hashed password\", () => {",
									"    const user = utils.getData(pm.response.json());",
									"",
									"    pm.expect(user).not.to.have.property('password');",
									"    pm.collectionVariables.set('user_username', user.username)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false,
						"followAuthorizationHeader": false,
						"disableUrlEncoding": false
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user2\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Add a user with an exiting username to the database",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"chatuser001\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "signin",
			"item": [
				{
					"name": "[⎷]  Authorization with non-existent username and password in the database",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"userdontexist\",\n    \"password\":\"longpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Authorization without the required \"username\" field",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"\",\n    \"password\": \"longpass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Authorization without the required \"password\" field",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"chatuser001\",\n    \"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Authorization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user2\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "[⎷] Get user data",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjYzMTdhYTEwOWNmZDI2NGQ5OWQyYmIiLCJpYXQiOjE3MTc3NzAxNjEsImV4cCI6MTcxODM3NDk2MX0.yKK2sZ8i56_tGL0TroKRGXCVU1ouanavhupiLsL7Kbk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/users/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "messages",
			"item": [
				{
					"name": "[⎷] Send a Message from User 1 to User 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjYzMTdhYTEwOWNmZDI2NGQ5OWQyYmIiLCJpYXQiOjE3MTc4MjI2ODMsImV4cCI6MTcxODQyNzQ4M30.YXGGZbCD80XBZqXohyLzgfJpgAVDvKbJwhyYi6VD4Ns",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"receiverId\": \"666317ba109cfd264d99d2bf\",\n  \"message\": \"hoy! gising na gago meowww TESTING DELETE\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/messages/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"messages",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Send a Message from User 2 to User 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjYzMTdiYTEwOWNmZDI2NGQ5OWQyYmYiLCJpYXQiOjE3MTc4MjQwMTIsImV4cCI6MTcxODQyODgxMn0.NPqGI3f6PegCxrWw9rpliwRo8N9b4ZzLSrhULzMeKEs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"receiverId\": \"666317aa109cfd264d99d2bb\",\n  \"message\": \"Test message006 from user2 to user1 \"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/messages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Get Messages between User1 and User2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjYzMTdhYTEwOWNmZDI2NGQ5OWQyYmIiLCJpYXQiOjE3MTc3NzAxNjEsImV4cCI6MTcxODM3NDk2MX0.yKK2sZ8i56_tGL0TroKRGXCVU1ouanavhupiLsL7Kbk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/messages/66629bf1278811bd59ccf3ae/66629bf7278811bd59ccf3b1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"messages",
								"66629bf1278811bd59ccf3ae",
								"66629bf7278811bd59ccf3b1"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Delete a message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjYzMTdhYTEwOWNmZDI2NGQ5OWQyYmIiLCJpYXQiOjE3MTc4MjI2ODMsImV4cCI6MTcxODQyNzQ4M30.YXGGZbCD80XBZqXohyLzgfJpgAVDvKbJwhyYi6VD4Ns",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/messages/6663e89d283f1de8294610cb",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"messages",
								"6663e89d283f1de8294610cb"
							]
						}
					},
					"response": []
				},
				{
					"name": "[⎷] Delete a message that's not yours",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/messages/66629cf2278811bd59ccf3c6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"messages",
								"66629cf2278811bd59ccf3c6"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "cf6e0c62a5d24fecc6625afbd2e1fa79a1bd6b99390a993ebfc522b65a5c0ab4eec87b65bf20aeacd48cdb2cec5f30f9f75297cc700cb00fb2035c1f863cbc79",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "{{jwt}}",
			"value": "cf6e0c62a5d24fecc6625afbd2e1fa79a1bd6b99390a993ebfc522b65a5c0ab4eec87b65bf20aeacd48cdb2cec5f30f9f75297cc700cb00fb2035c1f863cbc79",
			"type": "string",
			"disabled": true
		}
	]
}